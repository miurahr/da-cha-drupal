<?php
// $Id: xmlsitemap_term.install,v 1.5.2.4 2008/11/28 16:12:48 kiam Exp $

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_term_enable() {
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE type = 'module' AND name = 'pathauto'"));
  if ($weight !== FALSE) {
    db_query("UPDATE {system} SET weight = %d WHERE type = 'module' AND name = 'xmlsitemap_term'", ++$weight);
  }
  db_query("
    INSERT INTO {xmlsitemap_term} (tid, last_changed)
    SELECT td.tid, %d FROM {term_data} td
    LEFT JOIN {xmlsitemap_term} xt ON xt.tid = td.tid
    WHERE xt.tid IS NULL
  ", time());
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_disable().
 */
function xmlsitemap_term_disable() {
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_schema().
 */
function xmlsitemap_term_schema() {
  $schema['xmlsitemap_term'] = array(
    'description' => t('The base table for xmlsitemap_term.'),
    'fields' => array(
      'tid' => array(
        'description' => t('The id of the path.'),
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'last_changed' => array(
        'description' => t('Keeps track of new changes.'),
        'type' => 'int',
      ),
      'previously_changed' => array(
        'description' => t('Keeps track of old changes.'),
        'type' => 'int',
      ),
      'priority_override' => array(
        'description' => t('Stores the index value.'),
        'type' => 'float',
      ),
    ),
    'primary key' => array('tid'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_term_install() {
  drupal_install_schema('xmlsitemap_term');
}

/**
 * Implementation of hook_update_N().
 * Add missing URL aliases.
 */
function xmlsitemap_term_update_1() {
  $ret = array(update_sql("UPDATE {xmlsitemap_term} SET pid = NULL WHERE pid = 0"));
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("
        UPDATE {xmlsitemap_term} xt, {url_alias} ua SET xt.pid = ua.pid
        WHERE xt.pid IS NULL AND (
          ua.src = CONCAT('taxonomy/term/', CAST(xt.tid AS CHAR))
          OR ua.src = CONCAT('forum/', CAST(xt.tid AS CHAR))
        )
      ");
      break;
    case 'pgsql':
      $ret[] = update_sql("
        UPDATE {xmlsitemap_term} SET pid = {url_alias}.pid FROM {url_alias}
        WHERE {xmlsitemap_term}.pid IS NULL AND (
          {url_alias}.src = CONCAT('taxonomy/term/', CAST(tid AS VARCHAR))
          OR {url_alias}.src = CONCAT('forum/', CAST(tid AS VARCHAR))
        )
      ");
      break;
  }
  return $ret;
}

/**
 * Implementation of hook_update_N().
 * Updates the SQL tables.
 */
function xmlsitemap_term_update_6000() {
  $ret = array();
  $result = array();
  @db_drop_field($result, 'xmlsitemap_term', 'pid');
  if ($result[0]['success']) {
    $ret = $result;
  }
  $result = array();
  @db_drop_index($result, 'xmlsitemap_term', 'pid');
  if ($result[0]['success']) {
    $ret = array_merge($ret, $result);
  }
  return $ret;
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_term_update_6100() {
  return xmlsitemap_term_update_6000();
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_term_uninstall() {
  drupal_uninstall_schema('xmlsitemap_term');
  db_query("DELETE FROM {variable} WHERE name LIKE 'xmlsitemap\_term\_%'");
}
